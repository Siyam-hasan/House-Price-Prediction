# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13zOVAyATdsF4aUcb1VCobGbREYbJd1UY
"""

# House Price Prediction using Linear Regression

# Step 1: Import libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Step 2: Create synthetic dataset
np.random.seed(42)
n_samples = 100

area = np.random.randint(1000, 3000, n_samples)  # Area in square feet
location_score = np.random.randint(1, 10, n_samples)  # 1 to 5 rating
rooms = np.random.randint(1, 5, n_samples)  # Number of rooms
age = np.random.randint(0, 100, n_samples)  # Age of house

# Price formula with some noise
price = area * 150 + location_score * 10000 + rooms * 5000 - age * 1000 + np.random.randint(-10000, 10000, n_samples)

# Create DataFrame
df = pd.DataFrame({
    'Area': area,
    'LocationScore': location_score,
    'Rooms': rooms,
    'Age': age,
    'Price': price
})

# Step 3: Split dataset
X = df[['Area', 'LocationScore', 'Rooms', 'Age']]
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print(df.head())
# Step 4: Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 5: Predict and evaluate
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)

print("Mean Squared Error:", mse)
print("Model Coefficients:", model.coef_)
print("Model Intercept:", model.intercept_)

# Step 6: Show some predictions
result_df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(result_df.head(5))

# Step 7: Plot actual vs predicted prices
plt.figure(figsize=(12, 8))
plt.scatter(y_test, y_pred, color='red', alpha=0.6)
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='green', lw=2)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs Predicted House Prices')
plt.grid(True)
plt.show()

print(df.head(20))